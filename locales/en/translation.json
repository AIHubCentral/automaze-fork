{
    "website": {
        "aihub": "https://docs.aihub.wtf/",
        "applio": "https://docs.applio.org/faq"
    },
    "general": {
        "translation_not_available": "This command is not available in this language yet.",
        "not_found": "Command not found",
        "not_available": "Not available yet."
    },
    "faq": {
        "topics": {
            "artifacting": "**Artifacting**: When the inference output sounds robotic, distorted, with background noise, and fails to modulate words properly.",
            "architecture": "**Model Architecture**: The core models involved in RVC are HuBERT (for feature extraction) and Net_G (the generator model).",
            "batch size": "**Batch Size**: The amount of GPU used to train the model, with larger batch sizes generally leading to shorter training duration. On the other hand, lower batch size can make the model more accurate, however it's more resource intensive and slower. **For most cases a batch size of 4 gives good results**.",
            "epoch": "**Epoch**: The number of iterations performed to complete one full cycle of the dataset during training. It's not possible to say precisely how many epochs you need for your dataset, you need to monitor the [TensorBoard Graph](https://docs.applio.org/getting-started/tensorboard) to know if your model is overtraining.",
            "dataset": "**Dataset**: A set of audio files compressed into a .zip file, used by RVC for voice training. You can learn more about it in the [Applio Docs](https://docs.applio.org/guides/create-datasets/create-datasets)",
            "G and D": "**G and D**: Generative (G) and Discriminator (D) models, respectively, that store the training data, with the Generative model learning to replicate results similar to the original, and the Discriminator trying to distinguish real data from generated data.",
            "hubert": "**HuBERT**: A transformer-based model that extracts text from raw audio, previously trained on a masked prediction task, which RVC uses to train the voice models. There are several types of Hubert, some of examples are ContentVec, Japanese Hubert-Base and Chinese Hubert-Large. You can learn more about it in the [Applio Docs](https://docs.applio.org/faq)",
            "index": "**Faiss Integration (.index file)**: The [Faiss library](https://github.com/facebookresearch/faiss) enables efficient approximate nearest neighbor search in RVC during inference, retrieving and combining training audio segments with closest embeddings.",
            "model": "**Model**: The result of training on a dataset. Trained RVC models usually have the [.pth file extension](https://medium.com/@manasnandmohan/comprehending-pth-files-the-backbone-of-pytorch-models-ef9b232e092a) which is is a file format used to save different states of model including it's weights, biases and other parameter. Check this [guide](https://docs.applio.org/getting-started/training) for learning how to make your first voice model.",
            "net_g": "**Net_G**: The generator model in RVC that takes [HuBERT](https://arxiv.org/abs/2106.07447) features and speaker embeddings as input to generate the converted audio waveform.",
            "f0 extraction": "**F0 Extraction Methods**: Techniques like Crepe (full-tiny), RMVPE, and FCPE used for extracting fundamental frequency (pitch) information from audio.",
            "pitch guidance": "**Pitch Guidance**: Leveraging the [fundamental frequency (f0)](https://en.wikipedia.org/wiki/Fundamental_frequency) of the input voice during synthesis to better maintain the original pitch, intonation, and melody.",
            "sample rate": "üîâ **Sample rate** refers to the number of times per second an analog audio signal is converted to digital, measured in Hertz (Hz). Higher sample rates capture more detail but increase file size. Simple yet crucial for audio quality.\n\n> üí° **Tip**: Check the sample rate of your dataset for better choosing a pretrained model such as 32k, 40k or 48k. Unfortunately there aren't any 44.1Khz pretrain available yet, so choose one that has a sample rate closer to your dataset and test if it works well.",
            "inference": "**Inference**: The process where an audio is transformed by the voice model. You can learn more about it in the [Applio Docs](https://docs.applio.org/faq)",
            "overtraining": "**Overtraining**: An effective way to detect overtraining is checking if the [TensorBoard Graph](https://docs.applio.org/getting-started/tensorboard) starts rising and never comes back down, leading to robotic, muffled output with poor articulation.",
            "pretrain": "**Pretrained**: A model trained on several sets of long-duration audios, used as a starting point for training in RVC. You can check a good list of pretrained models in <#1233407331405004954>",
            "rmvpe": {
                "title": "Different types of **RMVPE** Pitch Extraction",
                "description": [
                    "- **rmvpe**: A Robust Model for Vocal Pitch Estimation in Polyphonic Music, the normal version of the best pitch extraction, it's robust and not sensible to noise",
                    "- **rmvpe+**: Inference ONLY, has a pitch threshold, it limits the max and minimum pitch possible, basically deleting f0 values below and above certain thresholds",
                    "- **rmvpe-gpu**: *Training* ONLY, uses your gpu for the feature extraction process, using more gpu so making training faster",
                    "- **rmvpe-onnx**: *Wokada* ONLY, its a must for AMD Users who use ONNX models"
                ],
                "footer": "Credits: Nick088"
            },
            "rvc": "**RVC (Retrieval-based Voice Conversion)**: A voice cloning technique that retrieves and combines audio segments from a source speaker to synthesize the voice of a target speaker, without requiring large parallel datasets."
        },
        "unknown": {
            "message": "I'm sorry, {{user}}. I couldn't find the topic you were looking for",
            "embedData": {
                "title": "Suggestions",
                "description": [
                    "Search for it in [AI HUB Docs](https://docs.aihub.wtf/) or [Applio Docs](https://docs.applio.org/faq). You will probably find your answer there üìö",
                    "Ask for help in {{okadaChannel}} if it's related to real time voice changing",
                    "Ask for help in {{helpChannel}} for general help, but use the command `!howtoask` first to learn how to structure your question properly and increase your chances of getting a reply",
                    "Last but not least, ask for help in {{helpAiArtChannel}} if it's related to AI images"
                ]
            }
        }
    },
    "help": {
        "title": "üìñ Command Help",
        "placeholder": "Select an option",
        "timeout": "Command timed out. Use `/help` to for a new interaction",
        "doxx": {
            "icon": "üë®‚Äçüíª",
            "label": "Doxx",
            "description": "Creates random house and IP addresses to troll someone",
            "embed": {
                "description": [
                    "Not actual doxxing, creates random house and IP addresses to troll someone.",
                    "\nUsage: `/doxx user`",
                    "\n**Options**:",
                    "- `User`: Discord user to doxx"
                ]
            }
        },
        "8ball": {
            "icon": "üé±",
            "label": "8ball",
            "description": "Answers closed-ended questions",
            "embed": {
                "description": [
                    "Answers questions with a probability of that being possible or not of happening in a funny way, don't take the answers seriously as they are randomly generated.",
                    "\nUsage: `/8ball options`",
                    "\n**Options**:",
                    "- `Question`: What do you want it to answer about"
                ]
            }
        },
        "banana": {
            "icon": "ü§£",
            "label": "Banana",
            "description": "Puts someone in /topbanana leaderboard",
            "embed": {
                "description": [
                    "Gives a banana to someone in a fun and playful way, it's not supposed to offend anyone.",
                    "\nUsage: `/banana user`",
                    "\n**Options**:",
                    "- `User`: Discord user to banan"
                ],
                "footer": "Note: It's also possible to use this command by right clicking (long press on mobile) on a user profile picture or name and then choose  Apps > banan."
            }
        },
        "topbanana": {
            "icon": "üéñÔ∏è",
            "label": "Top Banana (leaderboard)",
            "description": "Shows the top banan'd users",
            "embed": {
                "description": [
                    "Shows the top banan'd users. In other words, how much someone got `/banana` by other users.",
                    "\nUsage: `/topbanana options`",
                    "\n**Options**:",
                    "- `Limit` (optional): How many users to show (max 50)"
                ]
            }
        },
        "ping": {
            "icon": "üèì",
            "label": "Ping",
            "description": "Check the bot latency speed",
            "embed": {
                "description": [
                    "Check the bot latency speed",
                    "\nUsage: `/ping`"
                ]
            }
        },
        "close": {
            "icon": "üîí",
            "label": "Close",
            "description": "Close your post",
            "embed": {
                "description": [
                    "Close your own post in <#1159289700490694666> or <#1159289738314919936>. Note that staff members can also close your post.",
                    "\nUsage: `/close`"
                ]
            }
        },
        "guides": {
            "icon": "üìö",
            "label": "Guides",
            "description": "Shows guides for RVC and related things",
            "embed": {
                "description": [
                    "Shows guides for RVC and related things",
                    "\nUsage: `/guides options`",
                    "\n**Options**:",
                    "- `(Required) category`: Choose a category such as RVC or Upload for instance",
                    "- `(Optional) language`: Which language should be used on the response, defaults to english if not available",
                    "- `(Optional) user`: Recommend the guide to an user, note that this will ping the user."
                ]
            }
        },
        "cloud": {
            "icon": "‚òÅÔ∏è",
            "label": "Cloud",
            "description": "Use these if you don't have a powerful computer to run things locally",
            "embed": {
                "description": [
                    "Use these if you don't have a powerful computer to run things locally",
                    "\nUsage: `/cloud options`",
                    "\n**Options**:",
                    "- `platform`: Links to resources available in the selected cloud platform (colab, kaggle, lightning, etc...)"
                ]
            }
        },
        "faq": {
            "icon": "‚ùî",
            "label": "FAQ",
            "description": "Frequently asked questions about RVC or related technologies",
            "embed": {
                "description": [
                    "Frequently asked questions about RVC or related technologies",
                    "\nUsage: `/faq options`",
                    "\n**Options**:",
                    "- `Topic`: What do you want to know about",
                    "- `(Optional) Language`: Which language the bot will use to respond",
                    "- `(Optional) Private`: If set to `True` only you will be able to see the response"
                ]
            }
        },
        "help": {
            "icon": "üÜò",
            "label": "Help",
            "description": "Shows help for Automaze commands",
            "embed": {
                "description": [
                    "Shows help for Automaze commands or the channels you can ask for help on RVC or related things.",
                    "\nUsage: `/help options`",
                    "\n**Options**:",
                    "- `Commands`:  Choose a command to learn more about it",
                    "- `General`: Discover which channels you can ask for help if you need help with RVC or related things"
                ]
            }
        },
        "context_banan": {
            "icon": "ü§£",
            "label": "Banana",
            "description": "Puts someone in /topbanana leaderboard",
            "embed": {
                "description": [
                    "Gives a banana to someone in a fun and playful way, it's not supposed to offend anyone.",
                    "\nUsage: Right click a username or profile picture (long press on mobile), then select `Apps > banan`"
                ],
                "footer": "Note: It's also possible to use this command with /banana"
            }
        },
        "context_colab": {
            "icon": "‚òÅ",
            "label": "Send Colab Links",
            "description": "Sends the links for the working Google Colab notebooks",
            "embed": {
                "description": [
                    "Sends the links for the working Google Colab notebooks",
                    "\nUsage: Right click a username or profile picture (long press on mobile), then select `Apps > Send Colab links`"
                ],
                "footer": "Note: It's also possible to access the colab links with /cloud"
            }
        },
        "context_realtime": {
            "icon": "üé§",
            "label": "Send Realtime guides",
            "description": "Sends the links for the realtime RVC",
            "embed": {
                "description": [
                    "Sends the links for the realtime RVC and W-Okada guides",
                    "\nUsage: Right click a username or profile picture (long press on mobile), then select `Apps > Send Realtime links`"
                ],
                "footer": "Note: It's also possible to access the realtime guides with /guides realtime"
            }
        },
        "context_rvc": {
            "icon": "üìö",
            "label": "Send RVC guides",
            "description": "Sends the links for RVC guides",
            "embed": {
                "description": [
                    "Sends the links for RVC guides",
                    "\nUsage: Right click a username or profile picture (long press on mobile), then select `Apps > Send RVC guides`"
                ],
                "footer": "Note: It's also possible to access the RVC guides with /guides rvc"
            }
        },
        "context_help": {
            "icon": "üÜò",
            "label": "Send help",
            "description": "Sends the links for help channels",
            "embed": {
                "description": [
                    "Sends the links for help channels",
                    "\nUsage: Right click a username or profile picture (long press on mobile), then select `Apps > Send Help`"
                ],
                "footer": "Note: It's also possible to access the channel links with the command /help general"
            }
        }
    }
}